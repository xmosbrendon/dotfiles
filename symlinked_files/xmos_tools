# Viewfile based sandboxes
export PATH=~/sandboxes/xgit/scripts:$PATH

function sbox
{
  if [ -d ./infr_scripts_pl ]; then
    pushd ./infr_scripts_pl/Build/
    source SetupEnv
    popd
  else
    echo "Not in a viewfile based sandbox"
  fi
}

# Install infrastructure repos in an Apps viewfile based sandbox
function ibox
{
  if [ -d ./infr_scripts_pl ]; then
    Build.pl VIEW=apps DOMAINS=infr_apps,lib_cognidox,lib_docref_py,lib_logging_py,lib_subprocess_py,lib_xmlobject_py,lib_yaml_py,tools_released,tools_xmostest,xdoc_released
  else
    echo "Not in a viewfile based sandbox"
  fi
}

# Ensure unicode quotes are displayed correctly once sbox is run
export LANG=en_GB.UTF-8

# Local tools
alias sxtc13='source /Applications/XMOS_xTIMEcomposer_Enterprise_13.2.2/SetEnv.sh'
alias sxtc14='source /Applications/XMOS_xTIMEcomposer_Enterprise_14.3.2/SetEnv.sh'
alias sxtc='sxtc14'
alias sxdoc='source /Applications/XMOS/xdoc/2.0.18/SetEnv.sh'
alias sxpd='source /Applications/XMOS/xSoftIPTools/2.0.9/SetEnv.sh'
alias use_xmos_test='export XDE_ONLINE_URL=https://test.xmos.com'

# Test apps
alias dxsig='~/sandboxes/xsig_dev/xsig/xsig/bin/run_xsig'

# XMOS tools via Environment Modules
if [ $(command -v module) ]; then
  # Modules tool is installed and setup
  if [ -d ~/sandboxes/xmos_modulefiles ]; then
    module use ~/sandboxes/xmos_modulefiles/
  fi
fi
